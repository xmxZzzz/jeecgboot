<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ItemsMapperCustom">

    <!--根据指定商品ID查询评价信息-->
    <select id="queryItemsCommentList" parameterType="Map" resultType="com.example.pojo.vo.ItemCommentsVO">
        select
        ic.comment_level as commentLevel,ic.sepc_name as specName,ic.content as content,ic.created_time as createdTIme,
        u.nickname as nickName,u.face as userFace
        from items_comments ic
        left join users u
        on ic.user_id=u.id
        where ic.item_id=#{params.itemId}
        <if test=" params.level != null and params.level != '' ">
            and ic.comment_level=#{params.level}
        </if>
    </select>

    <select id="searchItems" parameterType="Map" resultType="com.example.pojo.vo.SearchItemsVO">
        select
        i.id as itemId,i.item_name as itemName,i.sell_counts as sellCounts,
        ii.url as imgUrl,tempSpec.price as price
        from items i
        left join items_img ii
        on i.id=ii.item_id
        left join (select item_id,min(price_normal) as price from items_spec group by item_id) tempSpec
        on tempSpec.item_id=i.id
        where ii.is_main=1
        <if test="params.keywords!='' and params.keywords!=null">
            and i.item_name like '%${params.keywords}%'
        </if>
        order by
        <choose>
            <when test="params.sort==&quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="params.sort==&quot;p&quot;">
                tempSpec.price asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.example.pojo.vo.SearchItemsVO">
        select
        i.id as itemId,i.item_name as itemName,i.sell_counts as sellCounts,
        ii.url as imgUrl,tempSpec.price as price
        from items i
        left join items_img ii
        on i.id=ii.item_id
        left join (select item_id,min(price_normal) as price from items_spec group by item_id) tempSpec
        on tempSpec.item_id=i.id
        where ii.is_main=1
        and i.cat_id=#{params.catId}
        order by
        <choose>
            <when test="params.sort==&quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="params.sort==&quot;p&quot;">
                tempSpec.price asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.example.pojo.vo.ShopCartVO">
        select
        t_items.id as itemId,
        t_items.item_name as itemName,
        t_items_img.url as itemImgUrl,
        t_items_spec.id as specId,
        t_items_spec.`name` as specName,
        t_items_spec.price_discount as priceDiscount,
        t_items_spec.price_normal as priceNormal
        from items_spec t_items_spec
        left join items t_items
        on t_items_spec.item_id=t_items.id
        left join items_img t_items_img
        on t_items_img.item_id=t_items_spec.item_id
        where t_items_img.is_main=1
        and t_items_spec.id in
        <foreach collection="paramsList" item="specId" index="index" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>
</mapper>